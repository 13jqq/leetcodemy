/*
// Employee info
class Employee {
    // It's the unique id of each node;
    // unique id of this employee
    public int id;
    // the importance value of this employee
    public int importance;
    // the id of direct subordinates
    public List<Integer> subordinates;
};
*/
class Solution {
    int countImp = 0;
        
        public int getImportance(List<Employee> employees, int id) {
         
        	if( employees == null || employees.size() == 0 ){
        		return 0;
        	}
        	
        	
        	List<Integer> list = new LinkedList<Integer>();
        	
        	for( int i =0 ;  i< employees.size() ;  i++){
        		if( employees.get(i).id == id){
        			list = employees.get(i).subordinates;
                    countImp = employees.get(i).importance;
        			break;
        		}
        	}
        	
        	for( int  i = 0 ; i < list.size() ; i++){
        		countImp += getImportance(employees , list.get(i));
        	}
        	
        	return countImp;
        	
        	
        	
        	
        	
        	
        }
}
