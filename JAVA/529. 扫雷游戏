class Solution {
    
     int n = 0 ; 
        int  m  =  0;
     public char[][] updateBoard(char[][] board, int[] click) {
            int r = click[0];
            int c = click[1];
            if( board[r][c] == 'M'){
            	board[r][c] = 'X';
            	return board;
            }
            
            if( board[r][c] != 'E'){
            	return board;
            }
            
             n = board.length;
             m = board[0].length;
            
             int count = 0 ;
             for( int i = -1 ; i <= 1 ; i++){
            	 for( int j = -1; j <= 1 ; j++){
            		 if( i == 0 && j == 0){
            			 continue;
            		 }
            		 
            		 int row = r + i;
            		 int col = c + j;
            		 if( row <0 || row >= n || col < 0 || col >= m){
            			 continue;
            		 }
            		 
            		 if( board [row][col] == 'M'){
            			 count ++;
            		 }
            	 }
             }
             
             if( count > 0){
            	 board[r][c] = (char)(count +'0');
             }else{
            	 board[r][c] = 'B';
            	 for( int i = -1 ; i <= 1; i ++){
            		 for( int j = - 1; j <= 1 ; j ++){
            			 if( i == 0 && j == 0){
                			 continue;
                		 }
                		 
                		 int row = r + i;
                		 int col = c + j;
                		 if( row <0 || row >= n || col < 0 || col >= m){
                			 continue;
                		 }
                		 
                		 if( board [row][col] == 'E'){
                			 int[] newClick = new int[2];
                			 newClick[0] = row;
                			 newClick[1] = col;
                			 updateBoard(board , newClick);
                		 }
            		 }
            	 }
            	 
             }
             
        	
        	
        	return board;
        }
    }
